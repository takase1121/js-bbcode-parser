{"version":3,"file":"parser.esm.min.js","sources":["../src/BBCode.js"],"sourcesContent":["export default class BBCode {\n    /**\n     * @param {Object} codes\n     */\n    constructor(codes) {\n        this.codes = [];\n\n        this.setCodes(codes);\n    }\n\n    /**\n     * parse\n     *\n     * @param {String} text\n     * @returns {String}\n     */\n    parse(text) {\n        return this.codes.reduce((text, code) => text.replace(code.regexp, code.replacement), text);\n    }\n\n    /**\n     * add bb codes\n     *\n     * @param {String} regex\n     * @param {String} replacement\n     * @returns {BBCode}\n     */\n    add(regex, replacement) {\n        this.codes.push({\n            regexp:      new RegExp(regex, 'igm'),\n            replacement: replacement\n        });\n\n        return this;\n    }\n\n    /**\n     * set bb codes\n     *\n     * @param {Object} codes\n     * @returns {BBCode}\n     */\n    setCodes(codes) {\n        this.codes = Object.keys(codes).map(function (regex) {\n            const replacement = codes[regex];\n\n            return {\n                regexp:      new RegExp(regex, 'igm'),\n                replacement: replacement\n            };\n        }, this);\n\n        return this;\n    }\n}\n"],"names":["constructor","codes","setCodes","parse","text","this","reduce","code","replace","regexp","replacement","add","regex","push","RegExp","Object","keys","map"],"mappings":"eAAe,MAIXA,YAAYC,QACHA,MAAQ,QAERC,SAASD,GASlBE,MAAMC,UACKC,KAAKJ,MAAMK,OAAO,CAACF,EAAMG,IAASH,EAAKI,QAAQD,EAAKE,OAAQF,EAAKG,aAAcN,GAU1FO,IAAIC,EAAOF,eACFT,MAAMY,KAAK,CACZJ,OAAa,IAAIK,OAAOF,EAAO,OAC/BF,YAAaA,IAGVL,KASXH,SAASD,eACAA,MAAQc,OAAOC,KAAKf,GAAOgB,IAAI,SAAUL,SACpCF,EAAcT,EAAMW,SAEnB,CACHH,OAAa,IAAIK,OAAOF,EAAO,OAC/BF,YAAaA,IAElBL,MAEIA"}